// Generated by CoffeeScript 2.4.1
(function() {
  var fs, genservicefilesprocessmodule, log, pathHandler, processAllThingies, serviceFileGen;

  genservicefilesprocessmodule = {
    name: "genservicefilesprocessmodule"
  };

  //region node_modules
  fs = require("fs");

  //endregion

  //log Switch
  log = function(arg) {
    if (allModules.debugmodule.modulesToDebug["genservicefilesprocessmodule"] != null) {
      console.log("[genservicefilesprocessmodule]: " + arg);
    }
  };

  //region internal variables
  pathHandler = null;

  serviceFileGen = null;

  //endregion

  //#initialization function  -> is automatically being called!  ONLY RELY ON DOM AND VARIABLES!! NO PLUGINS NO OHTER INITIALIZATIONS!!
  genservicefilesprocessmodule.initialize = function() {
    log("genservicefilesprocessmodule.initialize");
    pathHandler = allModules.pathhandlermodule;
    return serviceFileGen = allModules.servicefilegenmodule;
  };

  //region internal functions
  processAllThingies = async function() {
    var config, promises, requirePath, thingy;
    log("processAllThingies");
    requirePath = pathHandler.getConfigRequirePath();
    config = require(requirePath);
    promises = (function() {
      var i, len, ref, results;
      ref = config.thingies;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        thingy = ref[i];
        results.push(serviceFileGen.generateForThingy(thingy));
      }
      return results;
    })();
    return (await Promise.all(promises));
  };

  
  //endregion

  //region exposed functions
  genservicefilesprocessmodule.execute = async function(configPath, outputDirectory) {
    log("genservicefilesprocessmodule.execute");
    await pathHandler.setConfigFilePath(configPath);
    await pathHandler.setOutputDirectory(outputDirectory);
    await processAllThingies();
    return true;
  };

  //endregion
  module.exports = genservicefilesprocessmodule;

}).call(this);
